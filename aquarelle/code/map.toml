# SPDX-FileCopyrightText: 2024 Eduardo Javier Alvarado Aarón <eduardo.javier.alvarado.aaron@gmail.com>
#
# SPDX-License-Identifier: Apache-2.0

name = 'Visual Studio Code'
type = 'directory' # xml
about = '''
A theme for <a href='https://code.visualstudio.com'>Visual Studio Code</a>.
''' # rhai

display = 'arrangement + " – " + scheme("main")' # rhai
nomenclature = '''
let scheme = "";
for word in `${scheme("main")}`.split() { scheme += word.to_lower() + '-' }
arrangement_id + if scheme.pop() == () { () } else { '.' + scheme }
'''

subdirectories = ['.vscode']

[options]
accent   = { name =   'Accent', default.accent = 'any' }
emphasis = { name = 'Emphasis', default.accent = 'cyan' }

# TODO contrast-border = { default = -2.0 }

[options.dim-border]
name = 'Inactive border color'
about = 'Use another color for the window border when it is out of focus'
default = true

[options.dim-header]
name = 'Inactive title bar color'
about = 'Use another color for the title bar when the window is out of focus'
default = true

[options.semantic-highlighting]
name = 'Semantic Highlighting'
default = true

[options.basic-area]
name = 'Role `area` for terminal basic colors'
about = 'Use role `area` instead of `like` for basic colors'
default = false

[options.bright-area]
name = 'Role `area` for terminal bright colors'
about = 'Use role `area` instead of `like` for bright colors'
default = false

[schemes]
common = { name = 'Common', fallback = 'main' }
main   = { name = 'Main' }

activity-bar = { fallback = 'main', name = 'Activity Bar' }
menu         = { fallback = 'main', name = 'Menu' }
status-bar   = { fallback = 'main', name = 'Status Bar' }
terminal     = { fallback = 'main', name = 'Terminal' }

breadcrumb = { fallback = 'common', name = 'Breacrumb' }
editor     = { fallback = 'common', name = 'Editor' }
side-bar   = { fallback = 'common', name = 'Side Bar' }
tab-bar    = { fallback = 'common', name = 'Tab Bar' }
title-bar  = { fallback = 'common', name = 'Title Bar' }

notification = { fallback = 'editor', name = 'Notification' }
welcome-page = { fallback = 'editor', name = 'Welcome Page' }

[suggested-paths]
vscode-oss = { home = '.vscode-oss/extensions' }
vscodium-flatpak = { home = '.var/app/com.vscodium.codium/data/codium/extensions' }

[files]
manifest = { name = 'package.json' }
theme    = { name = 'color-theme.json' }
launch   = { name = 'launch.json', at = 1 }

[script] # rhai
embedded = '''
import "token" as token;
import "workbench" as workbench;

const main = cfg::scheme("main"); // json
const dark = main.lower.text.luma() > main.lower.like.luma();

const MANIFEST = `{
	"name": "${cfg::name}",
	"displayName": "${cfg::display}",
	"description": "Theme generated by Aquarelle",
	"author": "ejaa3 (https://github.com/ejaa3)",
	"version": "0.0.1",
	"publisher": "aquarelle",
	"homepage": "https://github.com/ejaa3/aquarelle",
	"bugs": {
		"url": "https://github.com/ejaa3/aquarelle/issues"
	},
	"license": "MIT",
	"keywords": ["aquarelle", "theme"],
	
	"engines": { "vscode": "^1.72.0" },
	"categories": [ "Themes" ],
	"contributes": {
		"themes": [{
			"label": "${cfg::display}",
			"uiTheme": "${if dark { "vs-dark" } else { "vs" }}",
			"path": "./color-theme.json"
		}]
	}
}`; // json

const THEME = `{

"name": "${cfg::display}",
"type": "${if dark { "dark" } else { "light" }}",
"semanticHighlighting": ${cfg::option("semantic-highlighting")},

"colors": ${workbench::colors},

"tokenColors": ${token::colors},

"semanticTokenColors": ${token::semantic_colors}

}`; // json

const LAUNCH = `{
	"version": "0.2.0",
	"configurations": [{
		"name": "Launch",
		"type": "extensionHost",
		"request": "launch",
		"args": ["--extensionDevelopmentPath=${"${workspaceFolder}"}"]
	}]
}`;

#{ manifest: MANIFEST, theme: THEME, launch: LAUNCH }
'''
